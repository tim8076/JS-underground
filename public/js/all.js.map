{"version":3,"sources":["all.js"],"names":["gameIndexView","document","querySelector","startGameButton","gamingView","classList","add","startGame","addEventListener","parts","concat","cookie","name","getCookie","value","length","split","shift","xScoreBoard","oScoreBoard","console","xScore","oScore","Number","gameBoard","grids","resultViews","currentTurn","winMatch","oMatch","xMatch","winner","turnCount","switchTurn","remove","checkWinner","currentMatch","win","match","every","num","includes","innerText","view","scoreBoard","score","showResult","forEach","contains","playGame","e","currentTarget","innerHTML","targetNum","target","dataset","setScore","push","grid","restartGameButton","restartGame","init"],"mappings":"aACA,IAAMA,cAAgBC,SAASC,cAAc,qBAD7CC,gBAAAF,SAAAC,cAAA,4BACMF,WAAaC,SAAWC,cAAR,iBAEhBE,UAAaH,WAGjBD,cAAcK,UAAUC,IAAI,UAD9BL,SAAMM,KAAYF,UAAZE,IAAAA,cACJP,WAAAA,UAAcK,OAAc,WAI9BF,SAAAA,UAAgBK,GAGhBC,EACa,KAAAC,OAAQT,SAASU,QADXC,MAAVC,KAAAA,OAAgBD,EAAhBC,MACP,GAAW,IAALC,EAAKC,OAAQd,OAAAA,EAASU,MAA5BK,MAAA,KAAAC,QANAb,gBAAWC,iBAAiB,QAA5BE,WAYF,IAAMW,YAAcjB,SAASC,cAAc,kBACrCiB,YAAclB,SAASC,cAAc,kBADrCgB,OAAAA,OAAcjB,UAASC,YAAc,EACrCiB,OAAAA,OAAclB,UAASC,YAAc,EAC3CkB,QAAIC,IAAMA,OAAUR,QACpB,IAwBIT,OAxBAkB,UAASC,SAAOV,cAAP,+BACbO,MAAYC,SAAQC,iBAApB,oCACME,YAAYvB,SAASC,iBAAc,qBACnCuB,YAAQxB,IACRyB,SAAW,CACjB,CAAA,EAAIC,EAAAA,GACJ,CAAA,EAAMC,EAAAA,GAUN,CAAA,EAAMC,EAAAA,GACN,CAAA,EAAMC,EAAAA,GACN,CAAA,EAAIC,EAAAA,GACJ,CAAA,EAAIC,EAAAA,GANF,CAAC,EAAG,EAAG,GAQT,CAAA,EAAMC,EAAAA,IALAJ,OAAS,GAOTF,OAAAA,GAEFvB,UAAWC,EAFb4B,WAIO,WACL7B,WAAWC,EAPfsB,YAQetB,MAAXD,aACAuB,WAAWtB,UAAX6B,OAAA,UACD9B,WAAAC,UAAAC,IAAA,UAVH,MAaM6B,WAAW9B,UAAG6B,OAAdC,UACJ/B,WAAUC,UAAVC,IAAA,UACA,MAIE6B,YAAc,SAAGC,GAClB,IALDC,GAAA,EAMA,OAAAT,SAAOS,QAAP,SAAAC,GARFA,EAAAC,MAAA,SAAAC,GAIM,OAAOJ,EAAaK,SAASD,OAQtBE,GAAAA,KAJJL,GASLM,SAAKtC,SAALuC,EAAmBC,GALrBD,EAAWF,UAAYG,GAQpBC,WAAA,SAAAf,GACFL,YALDqB,QAAA,SAAAJ,GADFA,EAAAtC,UAAAC,IAAA,UAGOqC,EAAKtC,UAAU2C,SAASjB,IAKzBkB,EAAAA,UAAWf,OAAXe,aAGAtB,SAAW,SAAfuB,GACEA,IAAEC,EAAAA,cAAcC,WAAWrC,OAA3BmC,CACArB,IAAAA,EAAYwB,SAAZH,EAAAI,OAAAC,QAAAf,KAFF,MAAoB,MAAhBb,cAGFuB,EAAAC,cAAetB,UAAS,uCACtBP,OAAAA,KAAU+B,GACVG,YAASrC,UAETK,SAASL,YADTlB,QAASU,GAETmC,SAAAA,OAAAA,UAAAA,OAAAxB,QACAE,UAAAnB,UAAAC,IAAA,eACDwC,WAAA,UAGeM,MAAdD,cACFrB,EAAAA,cAAYuB,UAAZ,gCAAAvB,OAAO2B,KAAKJ,GACRlB,YAAYL,UAEd0B,SAAStC,YADTG,QAAU,GAEVpB,SAASU,OAATV,UAAAA,OAAAoB,QACAG,UAAUnB,UAAUC,IAAI,eACxBwC,WAAW,eAME,GAAbd,WACFR,UAAUnB,UAAUC,IAAI,UACxBwC,WAAW,SAEXb,gBAIJR,MAAMsB,QAAQ,SAAAW,GACZA,EAAKlD,iBAAiB,QAASyC,YAIjC,IAAMU,kBAAoB1D,SAASC,cAAc,8BAC3C0D,YAAc,WAClBlC,YAAYqB,QAAQ,SAAAJ,GAAA,OAAAA,EAAAA,UAAIrC,IAAA,YAAAmB,MAAAsB,QAAS1C,SAAAA,GAAAA,OAAAA,EAAL+C,UAAJ,KAAApB,UAAxB,EACAP,OAAMsB,OAAQ,EAAIjB,OAAAf,OAASqC,EAAT5B,UAAlBnB,UAAA6B,OAAA,WAGAJ,kBAAgBtB,iBAAhB,QAAAoD,aAOF,IAAMC,KAAO,WAHbF,YAAAA,UAAkBnD,OAKhBW,YAAYuB,UAAYpB,QADxBJ","file":"all.js","sourcesContent":["// 遊戲開始畫面\r\nconst gameIndexView = document.querySelector('[data-game-start]');\r\nconst startGameButton = document.querySelector('[data-game-start-button]');\r\nconst gamingView = document.querySelector('[data-gaming]');\r\n\r\nconst startGame = () => {\r\n  gameIndexView.classList.add('d-none');\r\n  document.body.classList.add('bg-primary');\r\n  gamingView.classList.remove('d-none');\r\n}\r\nstartGameButton.addEventListener('click', startGame);\r\n\r\n// 讀取指定cookie\r\nfunction getCookie(name) {\r\n  const value = `; ${document.cookie}`;\r\n  const parts = value.split(`; ${name}=`);\r\n  if (parts.length === 2) return parts.pop().split(';').shift();\r\n}\r\n\r\n// 遊戲進行中\r\nconst xScoreBoard = document.querySelector('[data-x-score]');\r\nconst oScoreBoard = document.querySelector('[data-o-score]');\r\nlet xScore = Number(getCookie('xScore')) || 0;\r\nlet oScore = Number(getCookie('oScore')) || 0;\r\nconsole.log(xScore, oScore)\r\nconst gameBoard = document.querySelector('.game-grid-container.gaming');\r\nconst grids = document.querySelectorAll('.game-grid-container.gaming .col');\r\nconst resultViews = document.querySelectorAll('[data-result-win]');\r\nlet currentTurn = 'o';\r\nconst winMatch = [\r\n  [1, 2, 3],\r\n  [4, 5, 6],\r\n  [7, 8, 9],\r\n  [1, 4, 7],\r\n  [2, 5, 8],\r\n  [3, 6, 9],\r\n  [1, 5, 9],\r\n  [3, 5, 7],\r\n];\r\nconst oMatch = [];\r\nconst xMatch = [];\r\nlet winner;\r\nlet turnCount = 1;\r\n\r\nconst switchTurn = () => {\r\n  turnCount += 1;\r\n  if (currentTurn === 'o') {\r\n    gamingView.classList.remove('o-turn');\r\n    gamingView.classList.add('x-turn');\r\n    currentTurn = 'x';\r\n  } else {\r\n    gamingView.classList.remove('x-turn');\r\n    gamingView.classList.add('o-turn');\r\n    currentTurn = 'o';\r\n  }\r\n}\r\n\r\nconst checkWinner = (currentMatch) => {\r\n  let win = false;\r\n  winMatch.forEach(match => {\r\n    let isWin = match.every(num => {\r\n      return currentMatch.includes(num);\r\n    });\r\n    if (isWin) win = true;\r\n  })\r\n  return win;\r\n}\r\n\r\nconst setScore = (scoreBoard, score) => {\r\n  scoreBoard.innerText = score;\r\n}\r\n\r\nconst showResult = (winner) => {\r\n  resultViews.forEach(view => {\r\n    view.classList.add('d-none');\r\n    if(view.classList.contains(winner)) {\r\n      view.classList.remove('d-none');\r\n    }\r\n  })\r\n}\r\nconst playGame = function(e) {\r\n  if (e.currentTarget.childNodes.length) return;\r\n  const targetNum = parseInt(e.target.dataset.num);\r\n  if (currentTurn === 'o') {\r\n    e.currentTarget.innerHTML ='<i class=\"fa-regular fa-circle\"></i>';\r\n    oMatch.push(targetNum);\r\n    if(checkWinner(oMatch)) {\r\n      oScore += 1;\r\n      setScore(oScoreBoard, oScore);\r\n      document.cookie = `oScore=${oScore}`;\r\n      gameBoard.classList.add('d-none');\r\n      showResult('o-win');\r\n      return;\r\n    }\r\n  } \r\n  if (currentTurn === 'x') {\r\n    e.currentTarget.innerHTML = '<i class=\"fa-solid fa-x\"></i>';\r\n    xMatch.push(targetNum);\r\n    if (checkWinner(xMatch)) {\r\n      xScore += 1;\r\n      setScore(xScoreBoard, xScore);\r\n      document.cookie = `xScore=${xScore}`;\r\n      gameBoard.classList.add('d-none');\r\n      showResult('x-win');\r\n      return;\r\n    }\r\n  }\r\n\r\n  // 平手時\r\n  if (turnCount >= 9) {\r\n    gameBoard.classList.add('d-none');\r\n    showResult('draw');\r\n  } else {\r\n    switchTurn();\r\n  }\r\n}\r\n\r\ngrids.forEach(grid => {\r\n  grid.addEventListener('click', playGame);\r\n});\r\n\r\n// 再玩一次\r\nconst restartGameButton = document.querySelector('[data-restart-game-button]');\r\nconst restartGame = () => {\r\n  resultViews.forEach(view => view.classList.add('d-none'));\r\n  grids.forEach(grid => grid.innerHTML = '');\r\n  turnCount = 1;\r\n  oMatch.length = 0;\r\n  xMatch.length = 0;\r\n  gameBoard.classList.remove('d-none');\r\n}\r\n\r\nrestartGameButton.addEventListener('click', restartGame);\r\n\r\n// 初始化\r\nconst init = () => {\r\n  xScoreBoard.innerText = xScore;\r\n  oScoreBoard.innerText = oScore;\r\n}\r\ninit();\r\n\r\n\r\n\r\n"]}